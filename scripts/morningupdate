#!/bin/bash
# morningupdate.  Called when new data is available from ukparse.

# Call with VERBOSE=true set in the environment for diagnostic messages:
# VERBOSE=true ./morningupdate

#set -x  # for debugging, prints each line before executing it

source consts
[ -z "$VERBOSE" ] && VERBOSE=false

if $VERBOSE
then
	CRONQUIET=""
	CRONQUIET_NODASH=""
else
	CRONQUIET="--cronquiet"
	CRONQUIET_NODASH="cronquiet"
fi

# Make sure only one copy runs at once
if [ x$LOCKFILE = x ]
then
        ./run-with-lockfile -n morningupdate-lockfile $0
        if [ $? = 100 ]
        then
                echo "Another copy of morningupdate or compactsearchdb is already running" 1>&2
        fi
        exit $?
fi

echo -n "Start time: "
date +"%Y-%m-%d %H:%M:%S %Z"

# Get new data -- with the "-a" so we get same timestamps as remote filesystem
#$VERBOSE && echo "Rsyncing new data from parlparse"
#rsync --exclude '.zip' --exclude '.svn' --exclude 'tmp/' --recursive --archive ukparse.kforge.net::parldata /home/fawkes/parldata

# TODO: This is going to fail for proceedings that come out on Monday which were from Friday the previous week
../../openaustralia-parser/parse-speeches.rb --no-load yesterday

# Load recent new files from XML into the database
$VERBOSE && echo "Loading into database"
# --cronquiet because we think things are reliable enough we decide we don't
# want email on success each day just for the database loader
#./xml2db.pl $CRONQUIET --all --members
# We do these on separate lines, so if one fails, others still run
#./xml2db.pl $CRONQUIET --recent --wrans --quiet
./xml2db.pl $CRONQUIET --recent --debates
#./xml2db.pl $CRONQUIET --recent --westminhall --quiet
#./xml2db.pl $CRONQUIET --recent --wms --quiet
#./xml2db.pl $CRONQUIET --recent --lordsdebates --quiet
#./xml2db.pl $CRONQUIET --recent --ni --quiet

# Update Xapan index
$VERBOSE && echo "Xapian indexing"
../search/index.pl ../../searchdb sincefile ../../searchdb-lastupdated $CRONQUIET_NODASH

# Create new RSS files.
if $VERBOSE
then
	echo "Running rssgenerate"
	./rssgenerate
else
 	at NOW >/dev/null 2>/dev/null <<EOF
./rssgenerate
EOF
fi

echo -n "Whole thing done time: "
date +"%Y-%m-%d %H:%M:%S"

